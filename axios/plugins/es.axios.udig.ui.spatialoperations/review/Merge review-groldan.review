<?xml version="1.0" encoding="UTF-8"?>
<Review id="Merge review">
  <ReviewIssue id="EVU6MXY9">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2006-12-18 :: 01:01:23:169 GMT</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2006-12-18 :: 01:03:32:633 GMT</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>groldan</ReviewerId>
    <AssignedTo>groldan</AssignedTo>
    <File line="125">src/es/axios/udig/ui/spatialoperations/merge/internal/wizard/MergeFeaturesComposite.java</File>
    <Type>item.type.label.programLogic</Type>
    <Severity>item.severity.label.major</Severity>
    <Summary>lanzar excepción checked para permitir la notificación al usuario</Summary>
    <Description>public Feature getMergedFeature() lanza RTE, con lo que no hay forma de notificar al usuario si ha ingresado un valor incorrecto en algún atributo.

Sería mejor propagar el IllegalAttributeException y notificar al usuario</Description>
    <Annotation />
    <Revision />
    <Resolution>item.label.unset</Resolution>
    <Status>item.status.label.open</Status>
  </ReviewIssue>
  <ReviewIssue id="EVU6WLOC">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2006-12-18 :: 01:08:53:820 GMT</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2006-12-18 :: 01:17:14:042 GMT</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>groldan</ReviewerId>
    <AssignedTo>groldan</AssignedTo>
    <File line="46">src/es/axios/udig/ui/spatialoperations/internal/jts/GeometryUtil.java</File>
    <Type>item.type.label.suggestion</Type>
    <Severity>item.severity.label.major</Severity>
    <Summary>Utilizar el GeometryFacory de la geometría, no un singleton</Summary>
    <Description>No se gana nada con GEOM_FACTORY como singleton. GeometryFactory no es costosa de construir.
Además, hay que utilizar el que tienen asociadas las geometrías origen, para preservar el PrecisionModel y el CoordinateSequenceFactory que usan (pueden estar optimizados por el DataStore origen, o por uDig)

para esto, cuando se necesita crear una geometría a partir de otra, se obtiene con 
geomOrigen.getFactory()</Description>
    <Annotation />
    <Revision />
    <Resolution>item.label.unset</Resolution>
    <Status>item.status.label.open</Status>
  </ReviewIssue>
  <ReviewIssue id="EVU79AW5">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2006-12-18 :: 01:18:46:373 GMT</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2006-12-18 :: 01:21:04:608 GMT</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>groldan</ReviewerId>
    <AssignedTo>groldan</AssignedTo>
    <File line="75">src/es/axios/udig/ui/spatialoperations/merge/internal/transaction/MergeRunnableProcess.java</File>
    <Type>item.type.label.programLogic</Type>
    <Severity>item.severity.label.critical</Severity>
    <Summary>Tratar las excepciones</Summary>
    <Description>En MergeRunnableProcess las excepciones no están tratadas. Se puede usar  AppGISMediator.openError(title, message) para notificar las fallas</Description>
    <Annotation />
    <Revision />
    <Resolution>item.label.unset</Resolution>
    <Status>item.status.label.open</Status>
  </ReviewIssue>
  <ReviewIssue id="EVU7CS4T">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2006-12-18 :: 01:21:28:685 GMT</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2006-12-18 :: 01:25:22:697 GMT</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>groldan</ReviewerId>
    <AssignedTo>groldan</AssignedTo>
    <File line="78">src/es/axios/udig/ui/spatialoperations/merge/internal/transaction/MergeRunnableProcess.java</File>
    <Type>item.type.label.programLogic</Type>
    <Severity>item.severity.label.critical</Severity>
    <Summary>Utilizar un UndoableComposite para ejecutar el delete y el add de forma atomica, y usar el framework para ejecutarlo</Summary>
    <Description>Dos problemas:
- El delete y el add no se tratan de forma atomica, cuando deberían una sola acción
- No se utiliza el framework para ejecutar los comandos, por tanto no son undoables
Para corregirlo, utilizar un solo comando UndoableComposite con el delete y el add, y ejecutarlo mediante map.sendCommandSync(MapCommand) para que el framework cree el IMemento y se pueda deshacer</Description>
    <Annotation />
    <Revision />
    <Resolution>item.label.unset</Resolution>
    <Status>item.status.label.open</Status>
  </ReviewIssue>
</Review>

